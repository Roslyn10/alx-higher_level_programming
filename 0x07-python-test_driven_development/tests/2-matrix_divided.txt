How to Use 2-matrix_divided.py
==============================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

Using the Function
===================

Importing the function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Checking for module docstring:
    >>> m = __import__("2-matrix_divided").__doc__
    >>> len(m) > 1
    True

Checking for function docstring:
    >>> f = __import__("2-matrix_divided").matrix_divided.__doc__
    >>> len(f) > 1
    True

Regular Division:
    >>> matrix = [
    ...     [3, 6, 9],
    ...     [12, 15, 18]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Division with rounding:
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Checking if original matrix remains unchanged:
    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

Handling floating-point numbers:
    >>> matrix = [
    ...     [1.1, -2.2, 3.3],
    ...     [4.4, 5.5, -6.6]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

Combining integers and floats:
    >>> matrix = [
    ...     [1, -2.2, 3, 4.4, 5],
    ...     [-6.6, 7.00, 8, 9.999, 10]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

Uneven number of values in rows:
   >>> matrix = [
   ...     [3, 6, 9],
   ...     [12, 15, 18, 20]
   ... ]
   >>> matrix_divided(matrix, 3)
   Traceback (most recent call last):
   ...
   TypeError: Each row of the matrix must have the same size

Not Matrix:
    >>> matrix = [
    ...     ["3", 4, 5],
    ...     [8, 0, 12],
    ... ]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Invalid Divisors:
=================

Divisor is not a number:
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, "not a number")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Divisor is None:
    >>> matrix_divided(matrix, None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Divisor is zero:
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Div not an int:
    >>> matrix = [
    ...     [4, 5, 6],
    ...     [90, 23, 56],
    ... ]
    >>> matrix_divided(matrix, "3")
    Traceback (most recent call last):
    ....
    TypreError: div must be a number
